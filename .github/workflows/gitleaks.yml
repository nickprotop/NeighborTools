name: 🔐 GitLeaks Security Scan

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  gitleaks:
    name: 🔍 Secret Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for complete scan
        
    - name: 🔐 Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Optional: for GitLeaks Plus
        
    - name: 📊 Upload GitLeaks Report (Artifacts)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: results.sarif
        retention-days: 30
        
    - name: 🔒 Upload to GitHub Security Tab
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
        category: gitleaks
        
    - name: 🚨 Create Issue on Secret Detection
      if: failure() && github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const branchName = context.ref.replace('refs/heads/', '');
          const repoUrl = context.payload.repository.html_url;
          const runId = context.runId;
          const commit = context.sha;
          const author = context.actor;
          
          const issueTitle = "🚨 Security Alert: Secrets Detected in Push to " + branchName;
          const issueBody = "## 🔐 GitLeaks Security Alert\n\n" +
            "**Branch:** `" + branchName + "`\n" +
            "**Commit:** `" + commit + "`\n" +
            "**Author:** @" + author + "\n" +
            "**Workflow:** [View Run](" + repoUrl + "/actions/runs/" + runId + ")\n\n" +
            "### 🚨 Action Required\n\n" +
            "Secrets have been detected in a direct push to a protected branch. This is a **critical security issue** that requires immediate attention.\n\n" +
            "### 📋 Next Steps\n\n" +
            "1. **🔒 Immediately rotate/revoke any exposed secrets**\n" +
            "2. **📥 Download the [GitLeaks Report](" + repoUrl + "/actions/runs/" + runId + ")**\n" +
            "3. **🧹 Remove secrets from the repository**\n" +
            "4. **📚 Review [Security Best Practices](./README.md#secret-scanning-with-gitleaks)**\n\n" +
            "### ⚡ Prevention\n\n" +
            "Consider enabling [branch protection rules](./GITHUB_BRANCH_PROTECTION.md) to prevent direct pushes with secrets.\n\n" +
            "**Auto-generated by GitLeaks Security Scan**";

          const issue = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody,
            labels: ['security', 'critical', 'gitleaks']
          };
          
          await github.rest.issues.create(issue);