@using ToolsSharing.Frontend.Models
@using ToolsSharing.Frontend.Services
@using frontend.Components.Common
@using MudBlazor
@inject BundleService BundleService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject IUrlService UrlService

@if (IsLoading)
{
    <MudCard Class="ma-4">
        <MudCardContent>
            <MudSkeleton Height="200px" />
            <MudSkeleton Height="40px" Class="mt-2" />
            <MudSkeleton Height="60px" Class="mt-2" />
        </MudCardContent>
    </MudCard>
}
else if (FeaturedBundles.Any())
{
    <MudCard Class="ma-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5" Class="d-flex align-center">
                    <MudIcon Icon="@(IsShowingFeatured ? Icons.Material.Filled.Inventory : Icons.Material.Filled.TrendingUp)" Color="@(IsShowingFeatured ? Color.Primary : Color.Success)" Class="mr-2" />
                    @(IsShowingFeatured ? "Featured Tool Bundles" : "Popular Tool Bundles")
                </MudText>
                <MudText Typo="Typo.body2" Class="text-muted">
                    @(IsShowingFeatured ? "Discover our top-rated and most popular tool bundles" : "Discover the most viewed and highly rated bundles")
                </MudText>
            </CardHeaderContent>
        </MudCardHeader>
        
        <MudCardContent>
            <MudGrid>
                @foreach (var bundle in FeaturedBundles)
                {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudCard Class="featured-bundle-card cursor-pointer hover-elevation-4" 
                                @onclick="() => NavigateToBundle(bundle.Id)">
                            <MudCardMedia 
                                Image="@UrlService.GetFileUrl(bundle.ImageUrl)" 
                                Height="200"
                                Class="bundle-image" />
                            
                            <MudCardContent Class="pa-3">
                                <div class="d-flex align-center justify-space-between mb-2">
                                    @if (bundle.IsFeatured)
                                    {
                                        <MudChip T="string"
                                                Icon="Icons.Material.Filled.Star" 
                                                Color="Color.Warning" 
                                                Size="Size.Small"
                                                Label="true">
                                            Featured
                                        </MudChip>
                                    }
                                    else if (!IsShowingFeatured)
                                    {
                                        <MudChip T="string"
                                                Icon="Icons.Material.Filled.TrendingUp" 
                                                Color="Color.Success" 
                                                Size="Size.Small"
                                                Label="true">
                                            Popular
                                        </MudChip>
                                    }
                                    else
                                    {
                                        <div></div>
                                    }
                                    <MudText Typo="Typo.body2" Class="text-success font-weight-bold">
                                        $@bundle.DiscountedCost.ToString("F0")
                                    </MudText>
                                </div>
                                
                                <MudText Typo="Typo.h6" Class="bundle-name mb-1">
                                    @bundle.Name
                                </MudText>
                                
                                <MudText Typo="Typo.body2" Class="text-muted mb-2 bundle-description">
                                    @bundle.Description
                                </MudText>
                                
                                <div class="d-flex align-center justify-space-between mb-2">
                                    <StarRating Value="@bundle.AverageRating" 
                                               ShowRating="true" 
                                               ShowCount="true"
                                               ReviewCount="@bundle.ReviewCount"
                                               Size="Size.Small" />
                                </div>
                                
                                <div class="d-flex align-center justify-space-between">
                                    <MudText Typo="Typo.caption" Class="text-muted">
                                        <MudIcon Icon="Icons.Material.Filled.Build" Size="Size.Small" />
                                        @bundle.Tools.Count tools
                                    </MudText>
                                    <MudText Typo="Typo.caption" Class="text-muted">
                                        <MudIcon Icon="Icons.Material.Filled.Visibility" Size="Size.Small" />
                                        @bundle.ViewCount views
                                    </MudText>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(bundle.Category))
                                {
                                    <div class="mt-2">
                                        <MudChip T="string"
                                                Size="Size.Small" 
                                                Color="Color.Secondary" 
                                                Variant="Variant.Outlined">
                                            @bundle.Category
                                        </MudChip>
                                    </div>
                                }
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
            
            @if (ShowViewAllButton)
            {
                <div class="text-center mt-4">
                    <MudButton StartIcon="Icons.Material.Filled.Search" 
                              Color="Color.Primary" 
                              Variant="Variant.Outlined"
                              OnClick="NavigateToAllBundles">
                        View All Bundles
                    </MudButton>
                </div>
            }
        </MudCardContent>
    </MudCard>
}

@code {
    [Parameter] public int Count { get; set; } = 6;
    [Parameter] public bool ShowViewAllButton { get; set; } = true;

    private List<BundleModel> FeaturedBundles = new();
    private bool IsLoading = true;
    private bool IsShowingFeatured = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeaturedBundles();
    }

    private async Task LoadFeaturedBundles()
    {
        IsLoading = true;
        try
        {
            var response = await BundleService.GetFeaturedBundlesAsync(Count);
            if (response.Success && response.Data != null && response.Data.Any())
            {
                FeaturedBundles = response.Data;
                IsShowingFeatured = true;
            }
            else
            {
                // Fallback to popular bundles if no featured bundles available
                var popularResponse = await BundleService.GetPopularBundlesAsync(Count);
                if (popularResponse.Success && popularResponse.Data != null)
                {
                    FeaturedBundles = popularResponse.Data;
                    IsShowingFeatured = false;
                }
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading featured bundles: {ex.Message}", Severity.Error);
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void NavigateToBundle(Guid bundleId)
    {
        Navigation.NavigateTo($"/bundles/{bundleId}");
    }

    private void NavigateToAllBundles()
    {
        Navigation.NavigateTo("/bundles");
    }
}

<style>
    .featured-bundle-card {
        transition: all 0.2s ease-in-out;
        height: 100%;
    }
    
    .featured-bundle-card:hover {
        transform: translateY(-2px);
    }
    
    .bundle-image {
        object-fit: cover;
    }
    
    .bundle-name {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        min-height: 3em;
    }
    
    .bundle-description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        min-height: 2.5em;
    }
    
    .cursor-pointer {
        cursor: pointer;
    }
    
    .hover-elevation-4:hover {
        box-shadow: 0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12) !important;
    }
</style>