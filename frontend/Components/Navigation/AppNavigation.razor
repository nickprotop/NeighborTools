@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using frontend.Services
@using frontend.Models
@implements IDisposable

<!-- Mobile/Tablet Overlay Sidebar -->
<div class="nav-overlay @(IsMobileMenuOpen ? "active" : "")" @onclick="CloseMobileMenu"></div>

<aside class="app-sidebar @(IsMobileMenuOpen ? "mobile-open" : "") @(IsDesktopCollapsed ? "desktop-collapsed" : "")">
    <!-- Sidebar Header -->
    <div class="sidebar-header">
        <div class="brand-section">
            @if (!IsDesktopCollapsed || IsMobileMenuOpen)
            {
                <MudButton Variant="Variant.Text" 
                           Href="/" 
                           StartIcon="@Icons.Material.Filled.Handyman"
                           Class="brand-button">
                    <MudText Typo="Typo.h6" Class="brand-text">NeighborTools</MudText>
                </MudButton>
            }
            else
            {
                <MudTooltip Text="NeighborTools" Placement="Placement.Right">
                    <MudIconButton Icon="@Icons.Material.Filled.Handyman" 
                                   Href="/"
                                   Color="Color.Primary"
                                   Class="brand-icon" />
                </MudTooltip>
            }
        </div>
        
        <!-- Desktop Toggle Button -->
        <MudIconButton Icon="@(IsDesktopCollapsed ? Icons.Material.Filled.ChevronRight : Icons.Material.Filled.ChevronLeft)"
                       OnClick="ToggleDesktopSidebar"
                       Size="Size.Small"
                       Class="desktop-toggle"
                       Style="@(IsDesktopMode ? "display: block;" : "display: none;")" />
                       
        <!-- Mobile Close Button -->
        <MudIconButton Icon="@Icons.Material.Filled.Close" 
                       OnClick="CloseMobileMenu" 
                       Size="Size.Small"
                       Class="mobile-close"
                       Style="@(IsDesktopMode ? "display: none;" : "display: block;")" />
    </div>

    <!-- Sidebar Content -->
    <div class="sidebar-content">
        <AuthorizeView>
            <Authorized>
                <!-- Navigation Section -->
                <div class="nav-section">
                    @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                    {
                        <MudText Typo="Typo.overline" Class="section-title">Navigation</MudText>
                    }
                    
                    <NavItem Icon="@Icons.Material.Filled.Store" 
                             Text="Marketplace" 
                             Href="/marketplace"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Message" 
                             Text="Messages" 
                             Href="/messages"
                             Badge="@(UnreadMessageCount > 0 ? UnreadMessageCount.ToString() : null)"
                             BadgeColor="Color.Error"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    @if (HasOpenDisputes)
                    {
                        <NavItem Icon="@Icons.Material.Filled.ReportProblem" 
                                 Text="Disputes" 
                                 Href="/disputes"
                                 Badge="!"
                                 BadgeColor="Color.Warning"
                                 IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                                 OnClick="HandleNavigation" />
                    }
                </div>

                <!-- Actions Section -->
                <div class="nav-section">
                    @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                    {
                        <MudText Typo="Typo.overline" Class="section-title">Actions</MudText>
                    }
                    
                    <NavItem Icon="@Icons.Material.Filled.Add" 
                             Text="Add Tool" 
                             Href="/tools/create"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Category" 
                             Text="Create Bundle" 
                             Href="/bundles/create"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                </div>

                <!-- Account Section -->
                <div class="nav-section">
                    @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                    {
                        <MudText Typo="Typo.overline" Class="section-title">Account</MudText>
                    }
                    
                    <NavItem Icon="@Icons.Material.Filled.Inventory" 
                             Text="My Tools" 
                             Href="/my-tools"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Assignment" 
                             Text="My Rentals" 
                             Href="/my-rentals"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Favorite" 
                             Text="Favorites" 
                             Href="/favorites"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                </div>

                @if (IsAdmin)
                {
                    <!-- Admin Section -->
                    <div class="nav-section nav-footer">
                        @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                        {
                            <MudText Typo="Typo.overline" Class="section-title">Admin</MudText>
                        }
                        
                        <NavItem Icon="@Icons.Material.Filled.AdminPanelSettings" 
                                 Text="Admin Dashboard" 
                                 Href="/admin"
                                 IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                                 OnClick="HandleNavigation" />
                                 
                        <NavItem Icon="@Icons.Material.Filled.Security" 
                                 Text="Security Dashboard" 
                                 Href="/admin/security"
                                 IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                                 OnClick="HandleNavigation" />
                    </div>
                }

            </Authorized>
            <NotAuthorized>
                <!-- Unauthenticated Navigation -->
                <div class="nav-section">
                    @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                    {
                        <MudText Typo="Typo.overline" Class="section-title">Navigation</MudText>
                    }
                    
                    <NavItem Icon="@Icons.Material.Filled.Store" 
                             Text="Marketplace" 
                             Href="/marketplace"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Help" 
                             Text="Help Center" 
                             Href="/help"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                </div>

                <!-- Auth Actions -->
                <div class="nav-section">
                    @if (!IsDesktopCollapsed || IsMobileMenuOpen)
                    {
                        <MudText Typo="Typo.overline" Class="section-title">Get Started</MudText>
                    }
                    
                    <NavItem Icon="@Icons.Material.Filled.PersonAdd" 
                             Text="Sign up" 
                             Href="/register"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                             
                    <NavItem Icon="@Icons.Material.Filled.Login" 
                             Text="Log in" 
                             Href="/login"
                             IsCollapsed="IsDesktopCollapsed && !IsMobileMenuOpen"
                             OnClick="HandleNavigation" />
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</aside>

<style>
    /* Overlay */
    .nav-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1199;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }
    
    .nav-overlay.active {
        opacity: 1;
        visibility: visible;
    }
    
    /* Sidebar Base */
    .app-sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        background: var(--mud-palette-surface);
        border-right: 1px solid var(--mud-border-divider);
        z-index: 1200;
        display: flex;
        flex-direction: column;
        transition: all 0.3s ease;
        box-shadow: var(--mud-shadow-sm);
    }
    
    /* Mobile/Tablet Styles */
    @@media (max-width: 1199px) {
        .app-sidebar {
            width: 320px;
            transform: translateX(-100%);
        }
        
        .app-sidebar.mobile-open {
            transform: translateX(0);
        }
    }
    
    /* Desktop Styles */
    @@media (min-width: 1200px) {
        .nav-overlay {
            display: none;
        }
        
        .app-sidebar {
            width: 280px;
            transform: translateX(0);
            position: fixed;
            left: 0;
            top: 0;
        }
        
        .app-sidebar.desktop-collapsed {
            width: 72px;
        }
    }
    
    /* Header */
    .sidebar-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 16px;
        border-bottom: 1px solid var(--mud-border-divider);
        min-height: 64px;
        flex-shrink: 0;
    }
    
    .brand-section {
        flex: 1;
    }
    
    .brand-button {
        color: var(--mud-palette-primary) !important;
        justify-content: flex-start !important;
        padding: 8px;
        border-radius: var(--mud-radius-md);
    }
    
    .brand-icon {
        color: var(--mud-palette-primary);
        width: 40px;
        height: 40px;
    }
    
    .brand-text {
        font-weight: 600;
        margin-left: 8px;
    }
    
    .desktop-toggle,
    .mobile-close {
        color: var(--mud-text-secondary);
        flex-shrink: 0;
    }
    
    /* Content */
    .sidebar-content {
        flex: 1;
        overflow-y: auto;
        padding: 16px;
        display: flex;
        flex-direction: column;
    }
    
    .nav-section {
        margin-bottom: 24px;
    }
    
    .nav-footer {
        margin-top: auto;
        margin-bottom: 0;
    }
    
    
    .section-title {
        color: var(--mud-text-secondary);
        font-weight: 600;
        margin-bottom: 8px;
        padding-left: 8px;
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.1em;
    }
    
</style>

@code {
    [Parameter] public int UnreadMessageCount { get; set; } = 0;
    [Parameter] public bool HasOpenDisputes { get; set; } = false;
    [Parameter] public bool IsAdmin { get; set; } = false;
    [Parameter] public EventCallback<bool> OnStateChanged { get; set; }

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    [Inject] private IAuthService AuthService { get; set; } = default!;
    [Inject] private NavigationManager Navigation { get; set; } = default!;

    private bool IsMobileMenuOpen = false;
    private bool IsDesktopCollapsed = false;
    private bool IsDesktopMode = false; // Default to mobile (safer fallback)

    protected override async Task OnInitializedAsync()
    {
        await DetectScreenSize();
        await LoadDesktopState();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DetectScreenSize();
            StateHasChanged();
        }
    }
    
    private async Task DetectScreenSize()
    {
        try
        {
            var width = await JSRuntime.InvokeAsync<int>("eval", "window.innerWidth");
            IsDesktopMode = width >= 1200;
        }
        catch
        {
            IsDesktopMode = false; // Default to mobile (safer fallback)
        }
    }

    private async Task LoadDesktopState()
    {
        try
        {
            var collapsed = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "sidebar-collapsed");
            IsDesktopCollapsed = collapsed == "true";
            await NotifyStateChanged();
        }
        catch
        {
            IsDesktopCollapsed = false;
        }
    }

    private async Task SaveDesktopState()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "sidebar-collapsed", IsDesktopCollapsed.ToString().ToLower());
        }
        catch { }
    }

    public async Task ToggleMobileMenu()
    {
        IsMobileMenuOpen = !IsMobileMenuOpen;
        await NotifyStateChanged();
    }

    public async Task CloseMobileMenu()
    {
        if (IsMobileMenuOpen)
        {
            IsMobileMenuOpen = false;
            await NotifyStateChanged();
        }
    }

    private async Task ToggleDesktopSidebar()
    {
        IsDesktopCollapsed = !IsDesktopCollapsed;
        await SaveDesktopState();
        await NotifyStateChanged();
    }

    private async Task HandleNavigation()
    {
        await CloseMobileMenu();
    }


    private async Task NotifyStateChanged()
    {
        if (OnStateChanged.HasDelegate)
        {
            await OnStateChanged.InvokeAsync(IsDesktopCollapsed);
        }
        StateHasChanged();
    }

    public void Dispose()
    {
        // Cleanup JavaScript event listeners if needed
    }
}