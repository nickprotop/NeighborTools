@page "/"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using frontend.Models
@using frontend.Services
@inject IToolService ToolService
@attribute [Authorize]

<PageTitle>NeighborTools - Share and Borrow Tools</PageTitle>

<!-- Hero Section -->
<MudPaper Elevation="0" Class="pa-8 mb-8" Style="background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%); border-radius: 16px;">
    <div class="d-flex flex-column align-center text-center">
        <MudIcon Icon="Icons.Material.Filled.Handyman" Size="Size.Large" Style="font-size: 5rem; color: white; margin-bottom: 1rem;" />
        <MudText Typo="Typo.h2" Style="color: white; font-weight: bold;" GutterBottom="true">
            Welcome to NeighborTools
        </MudText>
        <MudText Typo="Typo.h6" Style="color: rgba(255,255,255,0.9); max-width: 600px; margin-bottom: 2rem;">
            Share tools with your neighbors and borrow what you need. Building community one tool at a time.
        </MudText>
        <AuthorizeView>
            <Authorized>
                <MudText Typo="Typo.h6" Style="color: white; margin-bottom: 1.5rem;">
                    Welcome back, @context.User.Identity?.Name! 👋
                </MudText>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Surface"
                           Size="Size.Large"
                           Href="/tools"
                           StartIcon="Icons.Material.Filled.Search"
                           Style="color: var(--mud-palette-primary); font-weight: bold;">
                    Browse Tools
                </MudButton>
            </Authorized>
        </AuthorizeView>
    </div>
</MudPaper>

<!-- Quick Actions -->
<MudGrid Class="mb-8">
    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="4" Style="height: 100%; border-radius: 12px;">
            <MudCardContent Class="d-flex flex-column align-center text-center pa-6">
                <MudIcon Icon="Icons.Material.Filled.Add" Color="Color.Primary" Size="Size.Large" Class="mb-4" Style="font-size: 3.5rem;" />
                <MudText Typo="Typo.h5" Color="Color.Primary" GutterBottom="true">Share Your Tools</MudText>
                <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                    List your tools and earn money by sharing them with neighbors.
                </MudText>
                <MudSpacer />
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/my-tools" StartIcon="Icons.Material.Filled.Inventory">
                    My Tools
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudItem>
    
    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="4" Style="height: 100%; border-radius: 12px;">
            <MudCardContent Class="d-flex flex-column align-center text-center pa-6">
                <MudIcon Icon="Icons.Material.Filled.Search" Color="Color.Success" Size="Size.Large" Class="mb-4" Style="font-size: 3.5rem;" />
                <MudText Typo="Typo.h5" Color="Color.Success" GutterBottom="true">Find Tools</MudText>
                <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                    Browse and rent tools from your neighbors when you need them.
                </MudText>
                <MudSpacer />
                <MudButton Variant="Variant.Filled" Color="Color.Success" Href="/tools" StartIcon="Icons.Material.Filled.Search">
                    Browse Tools
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudItem>
    
    <MudItem xs="12" sm="6" md="4">
        <MudCard Elevation="4" Style="height: 100%; border-radius: 12px;">
            <MudCardContent Class="d-flex flex-column align-center text-center pa-6">
                <MudIcon Icon="Icons.Material.Filled.Groups" Color="Color.Info" Size="Size.Large" Class="mb-4" Style="font-size: 3.5rem;" />
                <MudText Typo="Typo.h5" Color="Color.Info" GutterBottom="true">Build Community</MudText>
                <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                    Connect with neighbors and build stronger community relationships.
                </MudText>
                <MudSpacer />
                <MudButton Variant="Variant.Filled" Color="Color.Info" Href="/profile" StartIcon="Icons.Material.Filled.Person">
                    Your Profile
                </MudButton>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<!-- Featured Tools Section -->
@if (isLoading)
{
    <MudPaper Class="pa-8 text-center" Elevation="2" Style="border-radius: 12px;">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
        <MudText Typo="Typo.h6" Class="mt-4">Loading featured tools...</MudText>
    </MudPaper>
}
else if (featuredTools != null && featuredTools.Any())
{
    <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="true" Class="mb-6">
        <MudIcon Icon="Icons.Material.Filled.Star" Class="mr-2" />
        Featured Tools
    </MudText>
    
    <MudGrid>
        @foreach (var tool in featuredTools.Take(6))
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Elevation="4" Style="height: 100%; border-radius: 12px; transition: transform 0.2s;" Class="hover-card">
                    @if (tool.ImageUrls.Any())
                    {
                        <MudCardMedia Image="@tool.ImageUrls.First()" Height="200" Style="border-radius: 12px 12px 0 0;" />
                    }
                    else
                    {
                        <div class="d-flex align-center justify-center" style="height: 200px; background: var(--mud-palette-surface-variant); border-radius: 12px 12px 0 0;">
                            <MudIcon Icon="Icons.Material.Filled.Build" Size="Size.Large" Color="Color.Secondary" Style="font-size: 3rem;" />
                        </div>
                    }
                    
                    <MudCardContent>
                        <MudText Typo="Typo.h6" GutterBottom="true">@tool.Name</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-3">
                            @(tool.Description.Length > 100 ? tool.Description.Substring(0, 100) + "..." : tool.Description)
                        </MudText>
                        
                        <div class="d-flex justify-space-between align-center mb-3">
                            <MudChip T="string" Color="Color.Primary" Size="Size.Small">@tool.Category</MudChip>
                            <MudChip T="string" Color="@(tool.IsAvailable ? Color.Success : Color.Error)" Size="Size.Small">
                                @(tool.IsAvailable ? "Available" : "Unavailable")
                            </MudChip>
                        </div>
                        
                        <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-2">
                            $@tool.DailyRate.ToString("F2") / day
                        </MudText>
                        
                        @if (tool.Rating.HasValue)
                        {
                            <div class="d-flex align-center mb-3">
                                <MudRating ReadOnly="true" SelectedValue="@((int)tool.Rating.Value)" MaxValue="5" Size="Size.Small" />
                                <MudText Typo="Typo.caption" Class="ml-2">(@tool.ReviewCount reviews)</MudText>
                            </div>
                        }
                    </MudCardContent>
                    
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" 
                                   Color="Color.Primary" 
                                   FullWidth="true"
                                   Href="/tools"
                                   Disabled="@(!tool.IsAvailable)"
                                   StartIcon="Icons.Material.Filled.Visibility">
                            @(tool.IsAvailable ? "View Details" : "Unavailable")
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
    
    <div class="d-flex justify-center mt-6">
        <MudButton Variant="Variant.Outlined" 
                   Color="Color.Primary" 
                   Size="Size.Large"
                   Href="/tools"
                   StartIcon="Icons.Material.Filled.ViewList">
            View All Tools
        </MudButton>
    </div>
}
else
{
    <MudPaper Class="pa-8 text-center" Elevation="2" Style="border-radius: 12px;">
        <MudIcon Icon="Icons.Material.Filled.SearchOff" Size="Size.Large" Color="Color.Secondary" Class="mb-4" />
        <MudText Typo="Typo.h6" Color="Color.Secondary">No tools available yet</MudText>
        <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
            Be the first to share a tool with your community!
        </MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/tools/create" StartIcon="Icons.Material.Filled.Add">
            Add Your First Tool
        </MudButton>
    </MudPaper>
}

<style>
    .hover-card:hover {
        transform: translateY(-4px);
    }
</style>

@code {
    private List<Tool>? featuredTools;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadFeaturedTools();
    }

    private async Task LoadFeaturedTools()
    {
        isLoading = true;

        try
        {
            var result = await ToolService.GetToolsAsync();
            
            if (result.Success)
            {
                featuredTools = result.Data?.Where(t => t.IsAvailable).ToList();
            }
        }
        catch (Exception)
        {
            // Silently handle errors for featured tools
        }
        finally
        {
            isLoading = false;
        }
    }
}
